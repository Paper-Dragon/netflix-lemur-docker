
volumes:
  db_data: { }
  app_data: { }
  pgadmin_data: { }
  certs: {}

networks:
  appnet:
    driver: bridge

services:
  redis:
    image: "redis:5.0-alpine" # default version of Ubuntu 20.02, apt-cache show redis-server
    restart: on-failure
    networks:
      - appnet

  nginx:
    build:
      context: ./nginx
    #container_name: lemur-nginx
    networks:
      - appnet
    volumes:
      - app_data:/opt/lemur/lemur/static/dist
    restart: on-failure
    depends_on:
      - lemur
    ports:
      - 87:80
      - 447:443

  lemur:
    image: jockerdragon/lemur-docker:latest
    build:
      context: ./lemur-build-docker
    environment:
      - POSTGRES_USER=2zyJ2mUF8atRdep5
      - POSTGRES_PASSWORD=2zyJ2mUF8atRdep5
      - POSTGRES_DB=lemur
      - POSTGRES_HOST=postgres
      - DEBUG=True
      - LEMUR_ADMIN_PASSWORD=lemur
    #   - SKIP_SSL=1
    #   - LEMUR_TOKEN_SECRET=
      - LEMUR_DEFAULT_COUNTRY=PDCommunity
      - LEMUR_DEFAULT_STATE=PDState
      - LEMUR_DEFAULT_LOCATION=PDLocation
      - LEMUR_DEFAULT_ORGANIZATION=PDOrganizational
      - LEMUR_DEFAULT_ORGANIZATIONAL_UNIT=PDOrganizationalUnit
    #   - LEMUR_DEFAULT_ISSUER_PLUGIN=cryptography-issuer
    #   - LEMUR_DEFAULT_AUTHORITY=cryptography
    #   - MAIL_SERVER=mail.example.com
    #   - MAIL_PORT=25
    #   - LEMUR_EMAIL=lemur@example.com
    #   - LEMUR_SECURITY_TEAM_EMAIL=['team@example.com']
    #   - LEMUR_TOKEN_SECRET=
    #   - LEMUR_ENCRYPTION_KEYS=['']
    #   - LDAP_DEBUG=True
    #   - LDAP_AUTH=True
    #   - LDAP_BIND_URI=ldap://example.com
    #   - LDAP_BASE_DN=DC=example,DC=com
    #   - LDAP_EMAIL_DOMAIN=example.com
    #   - LDAP_USE_TLS=False
    #   - LDAP_REQUIRED_GROUP=certificate-management-admins
    #   - LDAP_GROUPS_TO_ROLES={'certificate-management-admins': 'admin','Team':'team@example.com'}
    #   - LDAP_IS_ACTIVE_DIRECTORY=False

    #   - POSTGRES_PORT=5432
    #   - POSTGRES_DUMP_HOST=
    #   - POSTGRES_DUMP_PORT=<defaults to POSTGRES_PORT>
    #   - POSTGRES_DUMP_DB=<defaults to POSTGRES_DB>
    #   - POSTGRES_DUMP_USER=<defaults to POSTGRES_USER>
    #   - POSTGRES_DUMP_PASSWORD=
    restart: on-failure
    networks:
      - appnet
    depends_on:
      - postgres
      - redis
    volumes:
      - ./lemur.conf.py:/home/lemur/.lemur/lemur.conf.py:ro
      - app_data:/opt/lemur/lemur/static/dist
 
  postgres:
    image: "postgres:alpine"
    environment:
      - POSTGRES_USER=2zyJ2mUF8atRdep5
      - POSTGRES_PASSWORD=2zyJ2mUF8atRdep5
      - POSTGRES_HOST=postgres
      - POSTGRES_MULTIPLE_DATABASES=cfssl,lemur
    volumes:
      - db_data:/var/lib/postgresql/data/
      - ./sql/000_create_dbs.sh:/docker-entrypoint-initdb.d/000_create_dbs.sh
      - ./sql/001_CreateCertificates.sql:/docker-entrypoint-initdb.d/001_CreateCertificates.sql
      - ./sql/002_AddMetadataToCertificates.sql:/docker-entrypoint-initdb.d/002_AddMetadataToCertificates.sql
    restart: unless-stopped
    networks:
      - appnet
  
  cfssl:
    environment:
      - POSTGRES_USER=2zyJ2mUF8atRdep5
      - POSTGRES_PASSWORD=2zyJ2mUF8atRdep5
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=cfssl
    image: jockerdragon/cfssl-ocsp:latest
    volumes:
      - certs:/etc/cfssl/certs
    ports:
      - "8888:8888"
      - "8889:8889"
    networks:
      - appnet
    depends_on:
      - postgres


  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=adminpassword
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - appnet
